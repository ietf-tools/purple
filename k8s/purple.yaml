apiVersion: apps/v1
kind: Deployment
metadata:
  name: rpc-purple
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: purple
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: purple
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
        # -----------------------------------------------------
        # Backend Container
        # -----------------------------------------------------
        - name: rpc-backend
          image: "ghcr.io/ietf-tools/rpc-purple:$APP_IMAGE_TAG"
          imagePullPolicy: Always
          volumeMounts:
            - name: backend-tmp
              mountPath: /tmp
#            - name: backend-home
#              mountPath: /home/purple
          env:
            - name: "CONTAINER_ROLE"
              value: "backend"
            # ensures the pod gets recreated on every deploy:
            - name: "DEPLOY_UID"
              value: "$DEPLOY_UID"
          envFrom:
            - secretRef:
                name: rpc-secrets-env
          startupProbe:
            httpGet:
              port: 8000
              path: /health/
              httpHeaders:
                - name: Host
                  value: localhost
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
            timeoutSeconds: 3
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsUser: 1000
            runAsGroup: 1000
        # -----------------------------------------------------
        # Frontend Container
        # -----------------------------------------------------
        - name: rpc-frontend
          image: "ghcr.io/ietf-tools/rpc-purple:$APP_IMAGE_TAG"
          imagePullPolicy: Always
          volumeMounts:
            - name: frontend-tmp
              mountPath: /tmp
          env:
            - name: "CONTAINER_ROLE"
              value: "frontend"
            # ensures the pod gets recreated on every deploy:
            - name: "DEPLOY_UID"
              value: "$DEPLOY_UID"
          envFrom:
            - secretRef:
                name: rpc-secrets-env
          startupProbe:
            httpGet:
              port: 3000
              path: /health/
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 30
            timeoutSeconds: 3
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsUser: 1000
            runAsGroup: 1000
        # -----------------------------------------------------
        # Nginx Container
        # -----------------------------------------------------
        - name: rpc-nginx
          image: "ghcr.io/nginxinc/nginx-unprivileged:1.27"
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          livenessProbe:
            httpGet:
              port: 8080
              path: /health/nginx
          securityContext:
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: nginx-tmp
              mountPath: /tmp
            - name: dt-cfg
              mountPath: /etc/nginx/conf.d/00logging.conf
              subPath: nginx-logging.conf
            - name: dt-cfg
              mountPath: /etc/nginx/conf.d/purple.conf
              subPath: nginx-purple.conf
      initContainers:
        - name: rpc-migration
          image: "ghcr.io/ietf-tools/datatracker:$APP_IMAGE_TAG"
          imagePullPolicy: IfNotPresent
          env:
            - name: "CONTAINER_ROLE"
              value: "migrations"
          envFrom:
            - secretRef:
                name: rpc-secrets-env
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: backend-tmp
              mountPath: /tmp
      volumes:
        - name: backend-tmp
          emptyDir:
            sizeLimit: "500Mi"
        - name: frontend-tmp
          emptyDir:
            sizeLimit: "500Mi"
        - name: dt-cfg
          configMap:
            name: rpc-files-cfgmap
        - name: nginx-tmp
          emptyDir:
            sizeLimit: "500Mi"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: rpc-purple
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: purple
